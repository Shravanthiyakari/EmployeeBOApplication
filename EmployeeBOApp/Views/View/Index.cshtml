@model List<EmployeeBOApp.Models.TicketingTable>

@{
    var userEmail = User.Identity?.Name;
    var userRole = User.IsInRole("GDO") ? "GDO" :
                   User.IsInRole("DM") ? "DM" :
                   User.IsInRole("PM") ? "PM" : "user";

    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    string searchQuery = ViewData["SearchQuery"]?.ToString() ?? "";
    string requestType = ViewData["RequestType"]?.ToString() ?? "Select";
}

<h2 class="mb-4">View Requests</h2>

<div class="mb-4 d-flex align-items-end justify-content-between">
    <div class="flex-grow-1 me-2">
        <label for="searchQuery" class="col-form-label">Search:</label>
        <input type="text" id="searchQuery" class="form-control"
               placeholder="Search by Emp Name, Project Name, Status, or Request Type"
               value="@searchQuery" onkeyup="liveSearch()" />
    </div>
    <form asp-controller="View" asp-action="ExportToExcel" method="post" class="p-0 m-0 border-0 shadow-none bg-transparent" id="exportForm">
        <input type="hidden" name="searchQuery" id="exportSearchQuery" value="@searchQuery" />
        <input type="hidden" name="requestType" id="exportRequestType" value="@requestType" />
        <button type="submit" class="btn btn-success mt-4">Export to Excel</button>
    </form>
</div>

<div id="requestsTableContainer">
    <table class="table table-bordered text-center requests-table">
        <thead>
            <tr>
                <th>Emp ID</th>
                <th>Emp Name</th>
                <th>
                    Request Type
                    <select id="requestTypeHeader" class="form-select form-select-sm mt-1" onchange="liveSearch()">
                        <option value="Select" selected="@(requestType == "Select")">All</option>
                        <option value="Deallocation" selected="@(requestType == "Deallocation")">Deallocation</option>
                        <option value="Allocation" selected="@(requestType == "Allocation")">Allocation</option>
                        <option value="ReportingChange" selected="@(requestType == "ReportingChange")">ReportingChange</option>
                        <option value="DepartmentChange" selected="@(requestType == "DepartmentChange")">DepartmentChange</option>
                        <option value="ManagerChange" selected="@(requestType == "ManagerChange")">ManagerChange</option>
                    </select>

                </th>
                <th>Project Code</th>
                <th>Project Name</th>
                <th>PM</th>
                <th>Status</th>
                <th>Approve</th>
                <th>Reject</th>
                <th>Delete</th>
                <th>Close</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticket in Model)
            {
                var emp = ticket.Emp;
                var project = emp?.Project;
                bool isInProgress = string.Equals(ticket.Status, "InProgress", StringComparison.OrdinalIgnoreCase);
                bool isOpen = string.Equals(ticket.Status, "Open", StringComparison.OrdinalIgnoreCase);

                <tr>
                    <td>@emp?.EmpId</td>
                    <td>@emp?.EmpName</td>
                    <td>@ticket.RequestType</td>
                    <td>@project?.ShortProjectName</td>
                    <td>@project?.ProjectName</td>
                    <td>@project?.Pm</td>
                    <td>@ticket.Status</td>

                    <!-- Approve (Only DM when Open) -->
                    <td>
                        @if ((userRole == "DM") && isOpen)
                        {
                            <form asp-action="ApproveRequest" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@ticket.TicketingId" />
                                <button type="submit" class="btn-approve">Approve</button>
                            </form>
                        }
                        else
                        {
                            <button class="btn-disabled-approve" disabled>Approve</button>
                        }
                    </td>

                    <!-- Reject (DM when Open, GDO when InProgress) -->
                    <td>
                        @if ((userRole == "DM" && isOpen) || (userRole == "GDO" && isInProgress))
                        {
                            <form asp-action="RejectRequest" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@ticket.TicketingId" />
                                <button class="btn-reject">Reject</button>
                            </form>
                        }
                        else
                        {
                            <button class="btn btn-sm btn-disabled-reject" disabled>Reject</button>
                        }
                    </td>

                    <!-- Delete (Only PM when Open) -->
                    <td>
                        @if (userRole == "PM" && isOpen)
                        {
                            <form asp-action="DeleteRequest" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@ticket.TicketingId" />
                                <button class="btn-delete">Delete</button>
                            </form>
                        }
                        else
                        {
                            <button class="btn btn-disabled-delete" disabled>Delete</button>
                        }
                    </td>

                    <!-- Close (Only GDO when InProgress) -->
                    <td>
                        @if (userRole == "GDO" && isInProgress)
                        {
                            <form asp-action="CloseRequest" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@ticket.TicketingId" />
                                <button class="btn btn-success btn-sm">Close</button>
                            </form>
                        }
                        else
                        {
                            <button class="btn-disabled-close" disabled>Close</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="pagination d-flex justify-content-center mt-4">
        <nav>
            <ul class="pagination">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { searchQuery = searchQuery, requestType = requestType, page = currentPage - 1 })">Previous</a>
                </li>

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { searchQuery = searchQuery, requestType = requestType, page = i })">@i</a>
                    </li>
                }

                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { searchQuery = searchQuery, requestType = requestType, page = currentPage + 1 })">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function liveSearch() {
            var query = $("#searchQuery").val();
            var type = $("#requestTypeHeader").val();

            $("#exportSearchQuery").val(query);
            $("#exportRequestType").val(type);

            $.ajax({
                url: '@Url.Action("Index", "View")',
                type: 'GET',
                data: { searchQuery: query, requestType: type, page: 1 },
                success: function (result) {
                    var newHtml = $(result).find('#requestsTableContainer').html();
                    $('#requestsTableContainer').html(newHtml);
                    $('.pagination').html($(result).find('.pagination').html());
                }
            });
        }
    </script>
}
